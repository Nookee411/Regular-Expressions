Вариант 1
1
Составить регулярное выражение, определяющее является ли заданная
строка IP адресом, записанным в десятичном виде. 
– пример правильных выражений:
127.0.0.1, 255.255.255.0. 
– пример неправильных выражений:
1300.6.7.8, abc.def.gha.bcd.

 public static bool IsIP(this string s)
        {
            Regex reg = new Regex(@"((25[0-5]|2[0-4]\d|[01]?\d\d?){3}\.)(25[0-5]|2[0-4]\d|[01]?\d\d?)");
            return reg.IsMatch(s);
        }

2
Написать регулярное выражение, определяющее является ли данная строка GUID с или без скобок. Где
GUID это строчка, состоящая из 8, 4, 4, 4, 12 шестнадцатеричных цифр
разделенных тире.  
– пример правильных выражений: e02fd0e4-00fd-090A-ca30- 0d00a0038ba0. 
– пример неправильных выражений: e02fd0e400fd090Aca300d00a0038ba0.

public static bool IsGUID(this string s)
        {
            Regex reg = new Regex(@"\S{8}-?\S{4}-\S{4}-\S{12}");
            return reg.IsMatch(s);
        }


3
Написать регулярное выражение, определяющее является ли данная строчка валидным URL адресом. В данной задаче правильным URL
считаются адреса http и https, явное указание протокола также может отсутствовать. Учитываются только адреса, состоящие из символов, т.е.
IP адреса в качестве URL не присутствуют при проверке. Допускаются поддомены, указание порта доступа через двоеточие, GET
запросы с передачей параметров, доступ к подпапкам на домене, допускается наличие якоря через решетку. Однобуквенные домены
считаются запрещенными.
Запрещены спецсимволы, например «–» в начале и конце имени домена. Запрещен символ «_» и пробел в имени домена. При составлении
регулярного выражения ориентируйтесь на список правильных и неправильных выражений заданных ниже. 
– пример правильных выражений:
http://www.example.com,
http://example.com. 
– пример неправильных выражений:
Just Text, http://a.com.
public static bool IsURL(this string s)
        {
            Regex reg = new Regex(@"(https?:\/\/)?(w{3}\.)?([A-Za-z1-9]){2,}\.[A-Za-z1-9]+([:]?\w{4})?((\/[A-Za-z1-9]*)*)\/?(#[A-Za-z1-9]*)?(\w*=\w*)?");
            return reg.IsMatch(s);
        }

4
Написать регулярное выражение, определяющее является ли данная строчка датой в формате dd/mm/yyyy. Начиная с 1600 года до 9999 года. 
– пример правильных выражений: 29/02/2000, 30/04/2003, 01/01/2003. 
– пример неправильных выражений: 29/02/2001, 30-04-2003, 1/1/1899.

public static bool IsCorrectDate(this string s)
        {
            Regex reg = new Regex(@"(((0?[1-9])|([12][0-8]))\/(0?2)|(((0?[1-9])|([12][0-9])|(30))\/((0?[468])|(12)|(10))|((0?[1-9])|([12][0-9])|(3[01]))\/((0?[13579])|11)))\/([1][6-9][0-9][0-9]|[2-9][0-9][0-9][0-9])|((((0?[1-9])|([12][0-9]))\/(0?2)|(((0?[1-9])|([12][0-9])|(30))\/((0?[468])|(12)|(10))|((0?[1-9])|([12][0-9])|(3[01]))\/((0?[13579])|11)))\/(((2[0-9])|(1[5-9]))((0[48])|([13579][26])|([28][0468]))))");
            return reg.IsMatch(s);
        }
        
5
Есть текст с ценами в рублях. Извлечь из него цены. 
– пример правильных выражений: 23.78 руб. 
– пример неправильных выражений: 22 р., 0.002 руб.

public static bool IsPrice(this string s)
        {
            Regex reg = new Regex(@"\d{1,}(\.\d{0,2})? ?р(уб)?\.?");
            return reg.IsMatch(s);
        }

6
Проверить, надежно ли составлен пароль. Пароль считается надежным, если он состоит из 8 или более символов. Где символом может быть английская
буква, цифра и знак подчеркивания. Пароль должен содержать хотя бы одну заглавную букву, одну маленькую букву и одну цифру. 
– пример правильных выражений: C00l_Pass, SupperPas1. 
– пример неправильных выражений: Cool_pass, C00l.

 public static bool IsGoodPassword(this string s)
        {
            Regex reg = new Regex(@"((?=.*\d)(?=.*[A-Z])(?=.*[a-z])(?!.* ).{8,})");
            return reg.IsMatch(s);
        }